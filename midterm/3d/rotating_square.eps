%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 0 0 500 500
% import 3d lib
(3d.eps) run

/size 500 def

% import GOL logic
% (gol.eps) run

realtime srand

/cycles 500 def

% disable back-face culling (because it doesn't work correctly yet)
/enable_back_face_culling false def
% full or wireframe (or both)
/render_method (wireframe) def

size 3 div size 3 div translate

%current begin
%0 4 pack 1 def
%0 5 pack 1 def
%1 5 pack 1 def
%1 4 pack 1 def
%10 4 pack 1 def
%10 5 pack 1 def
%10 6 pack 1 def
%11 3 pack 1 def
%11 7 pack 1 def
%12 2 pack 1 def
%13 2 pack 1 def
%12 8 pack 1 def
%13 8 pack 1 def
%14 5 pack 1 def
%15 3 pack 1 def
%16 4 pack 1 def
%16 5 pack 1 def
%16 6 pack 1 def
%15 7 pack 1 def
%17 5 pack 1 def
%20 2 pack 1 def
%20 3 pack 1 def
%20 4 pack 1 def
%21 2 pack 1 def
%21 3 pack 1 def
%21 4 pack 1 def
%22 1 pack 1 def
%22 5 pack 1 def
%24 0 pack 1 def
%24 1 pack 1 def
%24 5 pack 1 def
%24 6 pack 1 def
%34 2 pack 1 def
%34 3 pack 1 def
%35 3 pack 1 def
%35 2 pack 1 def
%end

%current old copy

/cPosStart [-100 -300 10] def %[2 5 div size mul .001 add 2 5 div size mul .001 add 0.5] def
/cPos cPosStart def
/cAngle [1 1 1] def

/cSpeed .1 def
/circleSize 500 def

/timeTaken 0 def

0 1 cycles {
	/timeTaken realtime def
	/theta exch def
	% /cPos [theta cSpeed mul cos circleSize mul cPosStart 0 get add theta cSpeed mul sin circleSize mul cPosStart 1 get add cPosStart 2 get] def
	/cPos [cPos 0 get 1 add cPos 1 get cPos 2 get] def
	% /cAngle [cAngle 0 get theta cSpeed mul cAngle 2 get] def
	%current {
	%	/value exch def
	%	/i exch def
	%	value 1 eq {i cell_inf} if
	%} forall
	%theta 2 mod 1 eq {
	%	old {
	%		/value exch def
	%		/i exch def
	%		value 0 eq {i dead_inf}{i live_inf} ifelse
	%	} forall
	%	current old copy
	%} if
	[0 0 20] 1 cube
	/timeTaken realtime timeTaken sub def
	%current length ==
	flushpage
	copypage
} for

%EOF